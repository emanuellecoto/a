create or replace PACKAGE  FIDE_CLINICA_DENTAL_PROCEDURES_PKG AS

    --ROLE
    PROCEDURE ROLE_INSERTAR_ROLE_SP(V_ID_ROLE IN NUMBER , V_NOMBRE_ROLE IN VARCHAR2) ;
    
    --ESTADO
    PROCEDURE ESTADO_INSERTAR_ESTADO_SP(V_ID_ESTADO IN VARCHAR2, V_NOMBRE_ESTADO IN VARCHAR2);
    
    --USUARIO
        PROCEDURE USUARIO_OBTENER_REGISTRO_SP(
    V_NOMBRE IN VARCHAR2,
    V_PRIMER_APELLIDO IN VARCHAR2,
    V_SEGUNDO_APELLIDO IN VARCHAR2,
    V_EMAIL IN VARCHAR2,
    V_TELEFONO IN NUMBER,
    V_CONTRASENA IN VARCHAR2
    );
    


END;

create or replace PACKAGE BODY FIDE_CLINICA_DENTAL_PROCEDURES_PKG AS

    --ROLE

    PROCEDURE ROLE_INSERTAR_ROLE_SP(
    V_ID_ROLE IN NUMBER,
    V_NOMBRE_ROLE IN VARCHAR2
    ) AS
    BEGIN
        INSERT INTO FIDE_ROLE_TB(ID_ROLE, DESCRIPCION)
        VALUES (V_ID_ROLE, V_NOMBRE_ROLE);
    
    END;
    
    --ESTADO
    PROCEDURE ESTADO_INSERTAR_ESTADO_SP(
    V_ID_ESTADO IN VARCHAR2,
    V_NOMBRE_ESTADO IN VARCHAR2    
    ) AS
    BEGIN
        INSERT INTO FIDE_ESTADO_TB(ID_ESTADO, DESCRIPCION)
        VALUES(V_ID_ESTADO, V_NOMBRE_ESTADO);
    END;
    
    --USUARIO
PROCEDURE USUARIO_OBTENER_REGISTRO_SP(
    V_NOMBRE IN VARCHAR2,
    V_PRIMER_APELLIDO IN VARCHAR2,
    V_SEGUNDO_APELLIDO IN VARCHAR2,
    V_EMAIL IN VARCHAR2,
    V_TELEFONO IN NUMBER,
    V_CONTRASENA IN VARCHAR2
) IS

    V_CUENTA_EMAIL NUMBER;
BEGIN

    IF V_NOMBRE IS NULL OR V_NOMBRE = ' ' THEN
        DBMS_OUTPUT.PUT_LINE('EL NOMBRE ESTA VACÍO');
        RETURN;
    ELSIF V_PRIMER_APELLIDO IS NULL OR V_PRIMER_APELLIDO = ' ' THEN
        DBMS_OUTPUT.PUT_LINE('EL PRIMER APELLIDO ESTA VACÍO');
        RETURN;
    ELSIF V_SEGUNDO_APELLIDO IS NULL OR V_SEGUNDO_APELLIDO = ' ' THEN
        DBMS_OUTPUT.PUT_LINE('EL SEGUNDO APELLIDO ESTA VACÍO');
        RETURN;
    ELSIF V_EMAIL IS NULL OR V_EMAIL = ' ' THEN
        DBMS_OUTPUT.PUT_LINE('EL EMAIL ESTA VACÍO');
        RETURN;
    ELSIF V_EMAIL NOT LIKE '%@%' OR V_EMAIL NOT LIKE '%.%' THEN
        DBMS_OUTPUT.PUT_LINE('EL EMAIL NO CONTIENE @ O .');
        RETURN;
    ELSIF V_TELEFONO IS NULL THEN
        DBMS_OUTPUT.PUT_LINE('EL TELEFONO NO CONTIENE VALOR');
        RETURN;
    ELSIF V_CONTRASENA IS NULL OR V_CONTRASENA = ' ' THEN
        DBMS_OUTPUT.PUT_LINE('LA CONTRASEÑA ESTA VACÍA');
        RETURN;
    END IF;


    SELECT COUNT(*) INTO V_CUENTA_EMAIL
    FROM FIDE_USUARIO_TB
    WHERE EMAIL = V_EMAIL;
    
    IF V_CUENTA_EMAIL > 0 THEN
        DBMS_OUTPUT.PUT_LINE('EL CORREO ELECTRÓNICO YA ESTÁ REGISTRADO');
        RETURN;
    END IF;


    INSERT INTO FIDE_USUARIO_TB
        (NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, EMAIL, TELEFONO, CREADO_POR, CONTRASEÑA)
    VALUES
        (V_NOMBRE, V_PRIMER_APELLIDO, V_SEGUNDO_APELLIDO, V_EMAIL, V_TELEFONO, V_NOMBRE, V_CONTRASENA);

    DBMS_OUTPUT.PUT_LINE('USUARIO REGISTRADO EXITOSAMENTE');

END;











END;

create or replace PACKAGE FIDE_CLINICA_DENTAL_FUNCTIONS_PKG AS

FUNCTION ID_ALMACEN_SEQ RETURN NUMBER;

FUNCTION ID_USUARIO_SEQ RETURN NUMBER;

FUNCTION ESTADO_RETORNAR_ESTADO_FN(V_ID_USUARIO IN NUMBER) RETURN VARCHAR2;

END;


create or replace PACKAGE BODY FIDE_CLINICA_DENTAL_FUNCTIONS_PKG AS

--FUNCION AUTOINCREMENT ALMACEN--
FUNCTION ID_ALMACEN_SEQ
RETURN NUMBER IS
V_INCREMENT NUMBER;
BEGIN
    V_INCREMENT := FIDE_ALMACEN_SQ.NEXTVAL ;
    RETURN V_INCREMENT;
END ID_ALMACEN_SEQ;

--FUNCION AUTOINCREMENT USUARIO--
FUNCTION ID_USUARIO_SEQ
RETURN NUMBER IS
V_INCREMENT NUMBER;
BEGIN
    V_INCREMENT := FIDE_USUARIO_SQ.NEXTVAL ;
    RETURN V_INCREMENT;
END ID_USUARIO_SEQ;


--FUNCION RETORNAR UN ESTADO I--

FUNCTION ESTADO_RETORNAR_ESTADO_FN(
    V_ID_USUARIO IN NUMBER
) RETURN VARCHAR2 IS 

V_ESTADO_SOLICITADO FIDE_USUARIO_TB.ID_ESTADO%TYPE;
BEGIN

    SELECT ID_ESTADO INTO V_ESTADO_SOLICITADO 
    FROM FIDE_USUARIO_TB 
    WHERE ID_USUARIO = V_ID_USUARIO;
    
    IF V_ESTADO_SOLICITADO = 'A' THEN
        UPDATE FIDE_USUARIO_TB 
        SET ID_ESTADO = 'I'
        WHERE ID_USUARIO = V_ID_USUARIO;
        RETURN 'I';


    ELSIF V_ESTADO_SOLICITADO = 'I' THEN
        UPDATE FIDE_USUARIO_TB 
        SET ID_ESTADO = 'A'
        WHERE ID_USUARIO = V_ID_USUARIO;
        RETURN 'A';
    END IF;
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN 'NO';
    WHEN OTHERS THEN
        RETURN 'NO';
END ESTADO_RETORNAR_ESTADO_FN;



END;
